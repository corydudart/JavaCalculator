/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.awt.event.KeyEvent;

/**
 *
 * @author Cory Dudart & Shaun Lohues
 */
public class Programmers extends javax.swing.JFrame {

    private double memory;
    private int base = 10;
    private Calculator frame1;

    /**
     * Creates new form Scientific
     */
    public Programmers() {
        initComponents();
    }

    public void baseType() {

        if (hex.isSelected()) {
            base = 16;
        }
        if (Dec.isSelected()) {
            base = 10;
        }
        if (Oct.isSelected()) {
            base = 8;
        }
        if (Bin.isSelected()) {
            base = 2;
        }

    }
    public void equals(){
           double answer;
        String temp = jTotal.getText();
        jTotal.setText(temp + jText.getText());
        jText.setText("0");
        if (jTotal.getText().contains("+")) {
            String parts[] = jTotal.getText().split("\\+");
            answer = Double.parseDouble(parts[0]) + Double.parseDouble(parts[1]);

            if (Math.floor(answer) == answer) {
                jText.setText(Integer.toString((int) answer));
            } else {
                jText.setText(Double.toString(answer));
            }

            jTotal.setText("");
            jText.grabFocus();
        } else if (jTotal.getText().contains("*")) {
            String parts[] = jTotal.getText().split("\\*");
            answer = Double.parseDouble(parts[0]) * Double.parseDouble(parts[1]);
            if (Math.floor(answer) == answer) {
                jText.setText(Integer.toString((int) answer));
            } else {
                jText.setText(Double.toString(answer));
            }
            jTotal.setText("");
            jText.grabFocus();
        } else if (jTotal.getText().contains("/")) {
            String parts[] = jTotal.getText().split("\\/");
            answer = Double.parseDouble(parts[0]) / Double.parseDouble(parts[1]);
            if (Math.floor(answer) == answer) {
                jText.setText(Integer.toString((int) answer));
            } else {
                jText.setText(Double.toString(answer));
            }
            jTotal.setText("");
            jText.grabFocus();
        } else if (jTotal.getText().contains("-")) {
            String parts[] = jTotal.getText().split("\\-");
            answer = Double.parseDouble(parts[0]) - Double.parseDouble(parts[1]);
            if (Math.floor(answer) == answer) {
                jText.setText(Integer.toString((int) answer));
            } else {
                jText.setText(Double.toString(answer));
            }
            jTotal.setText("");
            jText.grabFocus();
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        modButton = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        aButton = new javax.swing.JButton();
        bButton = new javax.swing.JButton();
        cButton = new javax.swing.JButton();
        dButton = new javax.swing.JButton();
        eButton = new javax.swing.JButton();
        fButton = new javax.swing.JButton();
        mMinus = new javax.swing.JButton();
        mPlus = new javax.swing.JButton();
        mS = new javax.swing.JButton();
        mR = new javax.swing.JButton();
        mC = new javax.swing.JButton();
        back = new javax.swing.JButton();
        cE = new javax.swing.JButton();
        C = new javax.swing.JButton();
        plusMinus = new javax.swing.JButton();
        sqrRoot = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        star = new javax.swing.JButton();
        oneDivX = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        jTotal = new javax.swing.JLabel();
        equals = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        hex = new javax.swing.JRadioButton();
        Dec = new javax.swing.JRadioButton();
        Oct = new javax.swing.JRadioButton();
        Bin = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        qWord = new javax.swing.JRadioButton();
        word = new javax.swing.JRadioButton();
        dWord = new javax.swing.JRadioButton();
        rByte = new javax.swing.JRadioButton();
        jText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        numset8 = new javax.swing.JLabel();
        numset7 = new javax.swing.JLabel();
        numset6 = new javax.swing.JLabel();
        numset5 = new javax.swing.JLabel();
        numset4 = new javax.swing.JLabel();
        numset3 = new javax.swing.JLabel();
        numset2 = new javax.swing.JLabel();
        numset1 = new javax.swing.JLabel();
        numset16 = new javax.swing.JLabel();
        numset15 = new javax.swing.JLabel();
        numset14 = new javax.swing.JLabel();
        numset13 = new javax.swing.JLabel();
        numset12 = new javax.swing.JLabel();
        numset11 = new javax.swing.JLabel();
        numset10 = new javax.swing.JLabel();
        numset9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 0), new java.awt.Dimension(40, 32767));
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programmers");
        setName("frameP"); // NOI18N
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0};
        layout.rowHeights = new int[] {0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 0};
        getContentPane().setLayout(layout);

        jButton1.setEnabled(false);
        jButton1.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("(");
        jButton2.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setText("RoL");
        jButton3.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setText("Lsh");
        jButton4.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton4, gridBagConstraints);

        jButton5.setText("Not");
        jButton5.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton5, gridBagConstraints);

        modButton.setText("Mod");
        modButton.setMargin(null);
        modButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(modButton, gridBagConstraints);

        jButton8.setText(")");
        jButton8.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton8, gridBagConstraints);

        jButton9.setText("RoR");
        jButton9.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton9, gridBagConstraints);

        jButton10.setText("Or");
        jButton10.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton10, gridBagConstraints);

        jButton11.setText("Xor");
        jButton11.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton11, gridBagConstraints);

        jButton12.setText("Rsh");
        jButton12.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton12, gridBagConstraints);

        jButton13.setText("And");
        jButton13.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(jButton13, gridBagConstraints);

        aButton.setText("A");
        aButton.setEnabled(false);
        aButton.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(aButton, gridBagConstraints);

        bButton.setText("B");
        bButton.setEnabled(false);
        bButton.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(bButton, gridBagConstraints);

        cButton.setText("C");
        cButton.setEnabled(false);
        cButton.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(cButton, gridBagConstraints);

        dButton.setText("D");
        dButton.setEnabled(false);
        dButton.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(dButton, gridBagConstraints);

        eButton.setText("E");
        eButton.setEnabled(false);
        eButton.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(eButton, gridBagConstraints);

        fButton.setText("F");
        fButton.setEnabled(false);
        fButton.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        getContentPane().add(fButton, gridBagConstraints);

        mMinus.setText("M-");
        mMinus.setMargin(null);
        mMinus.setMaximumSize(null);
        mMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMinusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(mMinus, gridBagConstraints);

        mPlus.setText("M+");
        mPlus.setMargin(null);
        mPlus.setMaximumSize(null);
        mPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPlusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(mPlus, gridBagConstraints);

        mS.setText("MS");
        mS.setMargin(null);
        mS.setMaximumSize(null);
        mS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(mS, gridBagConstraints);

        mR.setText("MR");
        mR.setMargin(null);
        mR.setMaximumSize(null);
        mR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(mR, gridBagConstraints);

        mC.setText("MC");
        mC.setMargin(null);
        mC.setMaximumSize(null);
        mC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(mC, gridBagConstraints);

        back.setText("←");
        back.setMargin(null);
        back.setMaximumSize(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(back, gridBagConstraints);

        cE.setText("CE");
        cE.setMargin(null);
        cE.setMaximumSize(null);
        cE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(cE, gridBagConstraints);

        C.setText("C");
        C.setMargin(null);
        C.setMaximumSize(null);
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(C, gridBagConstraints);

        plusMinus.setText("±");
        plusMinus.setMargin(null);
        plusMinus.setMaximumSize(null);
        plusMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusMinusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(plusMinus, gridBagConstraints);

        sqrRoot.setText("√");
        sqrRoot.setEnabled(false);
        sqrRoot.setMargin(null);
        sqrRoot.setMaximumSize(null);
        sqrRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrRootActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(sqrRoot, gridBagConstraints);

        seven.setText("7");
        seven.setMargin(null);
        seven.setMaximumSize(null);
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(seven, gridBagConstraints);

        eight.setText("8");
        eight.setMargin(null);
        eight.setMaximumSize(null);
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(eight, gridBagConstraints);

        nine.setText("9");
        nine.setMargin(null);
        nine.setMaximumSize(null);
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(nine, gridBagConstraints);

        divide.setText("/");
        divide.setMargin(null);
        divide.setMaximumSize(null);
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(divide, gridBagConstraints);

        percent.setText("%");
        percent.setEnabled(false);
        percent.setMargin(null);
        percent.setMaximumSize(null);
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(percent, gridBagConstraints);

        four.setText("4");
        four.setMargin(null);
        four.setMaximumSize(null);
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(four, gridBagConstraints);

        five.setText("5");
        five.setMargin(null);
        five.setMaximumSize(null);
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(five, gridBagConstraints);

        six.setText("6");
        six.setMargin(null);
        six.setMaximumSize(null);
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(six, gridBagConstraints);

        star.setText("*");
        star.setMargin(null);
        star.setMaximumSize(null);
        star.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(star, gridBagConstraints);

        oneDivX.setText("1/x");
        oneDivX.setEnabled(false);
        oneDivX.setMargin(null);
        oneDivX.setMaximumSize(null);
        oneDivX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneDivXActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(oneDivX, gridBagConstraints);

        one.setText("1");
        one.setMargin(null);
        one.setMaximumSize(null);
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(one, gridBagConstraints);

        two.setText("2");
        two.setMargin(null);
        two.setMaximumSize(null);
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(two, gridBagConstraints);

        three.setText("3");
        three.setMargin(null);
        three.setMaximumSize(null);
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(three, gridBagConstraints);

        minus.setText("-");
        minus.setMargin(null);
        minus.setMaximumSize(null);
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(minus, gridBagConstraints);

        jTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTotal.setText("0");
        jTotal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 7);
        getContentPane().add(jTotal, gridBagConstraints);

        equals.setText("=");
        equals.setMargin(null);
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 20;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(equals, gridBagConstraints);

        zero.setText("0");
        zero.setMargin(null);
        zero.setMaximumSize(null);
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(zero, gridBagConstraints);

        decimal.setText(".");
        decimal.setEnabled(false);
        decimal.setMargin(null);
        decimal.setMaximumSize(null);
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(decimal, gridBagConstraints);

        plus.setText("+");
        plus.setMargin(null);
        plus.setMaximumSize(null);
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        getContentPane().add(plus, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(hex);
        hex.setText("Hex");
        hex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(hex, gridBagConstraints);

        buttonGroup1.add(Dec);
        Dec.setSelected(true);
        Dec.setText("Dec");
        Dec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(Dec, gridBagConstraints);

        buttonGroup1.add(Oct);
        Oct.setText("Oct");
        Oct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OctActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(Oct, gridBagConstraints);

        buttonGroup1.add(Bin);
        Bin.setText("Bin");
        Bin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(Bin, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        buttonGroup2.add(qWord);
        qWord.setSelected(true);
        qWord.setText("QWord");
        qWord.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        qWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qWordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(qWord, gridBagConstraints);

        buttonGroup2.add(word);
        word.setText("Word  ");
        word.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        word.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel2.add(word, gridBagConstraints);

        buttonGroup2.add(dWord);
        dWord.setText("DWord");
        dWord.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dWordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(dWord, gridBagConstraints);

        buttonGroup2.add(rByte);
        rByte.setText("Byte  ");
        rByte.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rByte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rByteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel2.add(rByte, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        getContentPane().add(jPanel2, gridBagConstraints);

        jText.setEditable(false);
        jText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jText.setText("0");
        jText.setToolTipText("");
        jText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jText.setMargin(new java.awt.Insets(25, 2, 25, 2));
        jText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jText, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        numset8.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset8, gridBagConstraints);

        numset7.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset7, gridBagConstraints);

        numset6.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset6, gridBagConstraints);

        numset5.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset5, gridBagConstraints);

        numset4.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset4, gridBagConstraints);

        numset3.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset3, gridBagConstraints);

        numset2.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset2, gridBagConstraints);

        numset1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numset1.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset1, gridBagConstraints);

        numset16.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset16, gridBagConstraints);

        numset15.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset15, gridBagConstraints);

        numset14.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset14, gridBagConstraints);

        numset13.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset13, gridBagConstraints);

        numset12.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset12, gridBagConstraints);

        numset11.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset11, gridBagConstraints);

        numset10.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset10, gridBagConstraints);

        numset9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numset9.setText("0000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(numset9, gridBagConstraints);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel1, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("32");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("47");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel5, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("15");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("63");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel6, gridBagConstraints);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("31");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 13;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(filler7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        getContentPane().add(jPanel3, gridBagConstraints);

        jMenu1.setText("View");

        jMenuItem1.setText("Standard");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMinusActionPerformed
        memory -= Double.parseDouble(jText.getText());
        jText.grabFocus();
    }//GEN-LAST:event_mMinusActionPerformed

    private void mPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPlusActionPerformed
        memory += Double.parseDouble(jText.getText());
        jText.grabFocus();
    }//GEN-LAST:event_mPlusActionPerformed

    private void mSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSActionPerformed
        memory = Double.parseDouble(jText.getText());
        jText.setText("0");
        jText.grabFocus();
    }//GEN-LAST:event_mSActionPerformed

    private void mRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mRActionPerformed
        jText.setText(Double.toString(memory));
        jText.grabFocus();
    }//GEN-LAST:event_mRActionPerformed

    private void mCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCActionPerformed
        memory = 0;
        jText.grabFocus();
    }//GEN-LAST:event_mCActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        jText.setText(jText.getText().substring(0, jText.getText().length() - 1));
    }//GEN-LAST:event_backActionPerformed

    private void cEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEActionPerformed
        jText.setText("0");
        jText.grabFocus();
    }//GEN-LAST:event_cEActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        jText.setText("0");
        jTotal.setText("");
        jText.grabFocus();
    }//GEN-LAST:event_CActionPerformed

    private void plusMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusMinusActionPerformed
        double temp = (Double.parseDouble(jText.getText()));
        temp = -temp;
        jText.setText(Double.toString(temp));
    }//GEN-LAST:event_plusMinusActionPerformed

    private void sqrRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrRootActionPerformed
        String temp = jText.getText();
        double sqrt = (double) Math.sqrt(Double.parseDouble(temp));
        jText.setText(Double.toString(sqrt));
        jText.grabFocus();
    }//GEN-LAST:event_sqrRootActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("7");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "7";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("8");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "8";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("9");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "9";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_nineActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        double answer;
        if (jTotal.getText().equals("")) {
            jTotal.setText(jText.getText() + "/");
            jText.setText("0");
            jText.grabFocus();
        } else {
            equals();
            String temp = jTotal.getText();
            jTotal.setText(temp + jText.getText() + "/");
            jText.setText("0");
            jText.grabFocus();
        }
    }//GEN-LAST:event_divideActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
        double answer;
        double per;
        String temp = jTotal.getText();
        jTotal.setText(temp + jText.getText());
        jText.setText("0");

        if (jTotal.getText().contains("+")) {
            String parts[] = jTotal.getText().split("\\+");
            per = (Double.parseDouble(parts[1]) / 100) * (Double.parseDouble(parts[0]));
            answer = Double.parseDouble(parts[0]) + per;
            jText.setText(Double.toString(answer));
            jTotal.setText("");
            jText.grabFocus();
        } else if (jTotal.getText().contains("-")) {
            String parts[] = jTotal.getText().split("\\-");
            per = (Double.parseDouble(parts[1]) / 100) * (Double.parseDouble(parts[0]));
            answer = Double.parseDouble(parts[0]) - per;
            jText.setText(Double.toString(answer));
            jTotal.setText("");
            jText.grabFocus();
        } else if (jTotal.getText().contains("*")) {
            String parts[] = jTotal.getText().split("\\*");
            per = (Double.parseDouble(parts[1]) / 100) * (Double.parseDouble(parts[0]));
            answer = Double.parseDouble(parts[0]) * per;
            jText.setText(Double.toString(answer));
            jTotal.setText("");
            jText.grabFocus();
        } else if (jTotal.getText().contains("/")) {
            String parts[] = jTotal.getText().split("\\/");
            per = (Double.parseDouble(parts[1]) / 100) * (Double.parseDouble(parts[0]));
            answer = Double.parseDouble(parts[0]) / per;
            jText.setText(Double.toString(answer));
            jTotal.setText("");
            jText.grabFocus();
        }
    }//GEN-LAST:event_percentActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("4");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "4";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("5");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "5";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("6");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "6";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_sixActionPerformed

    private void starActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starActionPerformed
        double answer;
        if (jTotal.getText().equals("")) {
            jTotal.setText(jText.getText() + "*");
            jText.setText("0");
            jText.grabFocus();
        }  else {
            equals();
            String temp = jTotal.getText();
            jTotal.setText(temp + jText.getText() + "*");
            jText.setText("0");
            jText.grabFocus();
        }
    }//GEN-LAST:event_starActionPerformed

    private void oneDivXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneDivXActionPerformed
        double temp = (Double.parseDouble(jText.getText()));
        temp = 1 / temp;
        jText.setText(Double.toString(temp));
    }//GEN-LAST:event_oneDivXActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed

        if (jText.getText().equals("0")) {
            jText.setText("1");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "1";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("2");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "2";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("3");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "3";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_threeActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        double answer;
        if (jTotal.getText().equals("")) {
            jTotal.setText(jText.getText() + "-");
            jText.setText("0");
            jText.grabFocus();
        }  else {
            equals();
            String temp = jTotal.getText();
            jTotal.setText(temp + jText.getText() + "-");
            jText.setText("0");
            jText.grabFocus();
        }
    }//GEN-LAST:event_minusActionPerformed

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsActionPerformed
        equals();
    }//GEN-LAST:event_equalsActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        if (jText.getText().equals("0")) {
            jText.setText("0");
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + "0";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_zeroActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        if (jText.getText().contains(".")) {
            String Temp = jText.getText();
            jText.setText(Temp);
            jText.grabFocus();
        } else {
            String Temp = jText.getText() + ".";
            jText.setText(Temp);
            jText.grabFocus();
        }
    }//GEN-LAST:event_decimalActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        double answer;
        if (jTotal.getText().equals("")) {
            jTotal.setText(jText.getText() + "+");
            jText.setText("0");
            jText.grabFocus();
        } else {
            equals();
            String temp = jTotal.getText();
            jTotal.setText(temp + jText.getText() + "+");
            jText.setText("0");
            jText.grabFocus();
        }
    }//GEN-LAST:event_plusActionPerformed

    private void jTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKeyPressed
        int keyCode = evt.getKeyCode();
        if (keyCode == KeyEvent.VK_ENTER) {
            equals.doClick();
        } else if (keyCode == KeyEvent.VK_MULTIPLY) {
            star.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD1) {
            one.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD2) {
            two.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD3) {
            three.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD4) {
            four.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD5) {
            five.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD6) {
            six.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD7) {
            seven.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD8) {
            eight.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD9) {
            nine.doClick();
        } else if (keyCode == KeyEvent.VK_NUMPAD0) {
            zero.doClick();
        } else if (keyCode == KeyEvent.VK_ADD) {
            plus.doClick();
        } else if (keyCode == KeyEvent.VK_DECIMAL) {
            decimal.doClick();
        } else if (keyCode == KeyEvent.VK_SUBTRACT) {
            minus.doClick();
        } else if (keyCode == KeyEvent.VK_DIVIDE) {
            divide.doClick();
        }
    }//GEN-LAST:event_jTextKeyPressed

    private void hexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexActionPerformed
        String temp = jText.getText();
        int hexa = Integer.parseInt(temp, base);
        aButton.setEnabled(true);
        bButton.setEnabled(true);
        cButton.setEnabled(true);
        dButton.setEnabled(true);
        eButton.setEnabled(true);
        fButton.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);
        jText.setText(Integer.toHexString(hexa));
        baseType();
        jText.grabFocus();

    }//GEN-LAST:event_hexActionPerformed

    private void DecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecActionPerformed
        String temp = jText.getText();
        int dec = Integer.parseInt(temp, base);
        aButton.setEnabled(false);
        bButton.setEnabled(false);
        cButton.setEnabled(false);
        dButton.setEnabled(false);
        eButton.setEnabled(false);
        fButton.setEnabled(false);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);
        jText.setText(Integer.toString(dec));
        baseType();
        jText.grabFocus();
    }//GEN-LAST:event_DecActionPerformed

    private void OctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OctActionPerformed
        String temp = jText.getText();
        int octal = Integer.parseInt(temp, base);
        aButton.setEnabled(false);
        bButton.setEnabled(false);
        cButton.setEnabled(false);
        dButton.setEnabled(false);
        eButton.setEnabled(false);
        fButton.setEnabled(false);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(false);
        nine.setEnabled(false);
        jText.setText(Integer.toOctalString(octal));
        baseType();
        jText.grabFocus();
    }//GEN-LAST:event_OctActionPerformed

    private void BinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinActionPerformed
        String temp = jText.getText();
        int binary = Integer.parseInt(temp, base);
        aButton.setEnabled(false);
        bButton.setEnabled(false);
        cButton.setEnabled(false);
        dButton.setEnabled(false);
        eButton.setEnabled(false);
        fButton.setEnabled(false);
        two.setEnabled(false);
        three.setEnabled(false);
        four.setEnabled(false);
        five.setEnabled(false);
        six.setEnabled(false);
        seven.setEnabled(false);
        eight.setEnabled(false);
        nine.setEnabled(false);
        jText.setText(Integer.toBinaryString(binary));
        baseType();
        jText.grabFocus();

    }//GEN-LAST:event_BinActionPerformed

    private void qWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qWordActionPerformed
        numset1.setText("0000");
        numset2.setText("0000");
        numset3.setText("0000");
        numset4.setText("0000");
        numset5.setText("0000");
        numset6.setText("0000");
        numset7.setText("0000");
        numset8.setText("0000");
        numset9.setText("0000");
        numset10.setText("0000");
        numset11.setText("0000");
        numset12.setText("0000");
        numset13.setText("0000");
        numset14.setText("0000");
        numset15.setText("0000");
        numset16.setText("0000");
        jLabel1.setText("0");
        jLabel2.setText("15");
        jLabel3.setText("31");
        jLabel4.setText("32");
        jLabel5.setText("47");
        jLabel6.setText("63");
        jText.grabFocus();
    }//GEN-LAST:event_qWordActionPerformed

    private void dWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dWordActionPerformed
        numset1.setText("0000");
        numset2.setText("0000");
        numset3.setText("0000");
        numset4.setText("0000");
        numset5.setText("0000");
        numset6.setText("0000");
        numset7.setText("0000");
        numset8.setText("0000");
        numset9.setText("    ");
        numset10.setText("    ");
        numset11.setText("    ");
        numset12.setText("    ");
        numset13.setText("    ");
        numset14.setText("    ");
        numset15.setText("    ");
        numset16.setText("    ");
        jLabel1.setText("0");
        jLabel2.setText("15");
        jLabel3.setText("31");
        jLabel4.setText("    ");
        jLabel5.setText("    ");
        jLabel6.setText("    ");
        jText.grabFocus();
    }//GEN-LAST:event_dWordActionPerformed

    private void wordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordActionPerformed
        numset1.setText("0000");
        numset2.setText("0000");
        numset3.setText("0000");
        numset4.setText("0000");
        numset5.setText("    ");
        numset6.setText("    ");
        numset7.setText("    ");
        numset8.setText("    ");
        numset9.setText("    ");
        numset10.setText("    ");
        numset11.setText("    ");
        numset12.setText("    ");
        numset13.setText("    ");
        numset14.setText("    ");
        numset15.setText("    ");
        numset16.setText("    ");
        jLabel1.setText("0");
        jLabel2.setText("15");
        jLabel3.setText("    ");
        jLabel4.setText("    ");
        jLabel5.setText("    ");
        jLabel6.setText("    ");
        jText.grabFocus();
    }//GEN-LAST:event_wordActionPerformed

    private void rByteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rByteActionPerformed
        numset1.setText("0000");
        numset2.setText("0000");
        numset3.setText("    ");
        numset4.setText("    ");
        numset5.setText("    ");
        numset6.setText("    ");
        numset7.setText("    ");
        numset8.setText("    ");
        numset9.setText("    ");
        numset10.setText("    ");
        numset11.setText("    ");
        numset12.setText("    ");
        numset13.setText("    ");
        numset14.setText("    ");
        numset15.setText("    ");
        numset16.setText("    ");
        jLabel1.setText("0");
        jLabel2.setText("    ");
        jLabel3.setText("    ");
        jLabel4.setText("    ");
        jLabel5.setText("    ");
        jLabel6.setText("    ");
        jText.grabFocus();
    }//GEN-LAST:event_rByteActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (frame1 == null) {
            frame1 = new Calculator();
        }

        setVisible(false);
        frame1.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void modButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modButtonActionPerformed
        double answer;
        if (jTotal.getText().equals("")) {
            jTotal.setText(jText.getText() + "%");
            jText.setText("0");
            jText.grabFocus();
        } else if (jTotal.getText().contains("%")) {
            String parts[] = jTotal.getText().split("\\%");
            answer = Double.parseDouble(parts[0]) % Double.parseDouble(jText.getText());
            jTotal.setText(Double.toString(answer) + "%");
            jText.setText("0");
            jText.grabFocus();
        } else {
            String temp = jTotal.getText();
            jTotal.setText(temp + jText.getText() + "%");
            jText.setText("0");
            jText.grabFocus();
        }
    }//GEN-LAST:event_modButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Programmers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Programmers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Programmers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Programmers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Programmers().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Bin;
    private javax.swing.JButton C;
    private javax.swing.JRadioButton Dec;
    private javax.swing.JRadioButton Oct;
    private javax.swing.JButton aButton;
    private javax.swing.JButton bButton;
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cButton;
    private javax.swing.JButton cE;
    private javax.swing.JButton dButton;
    private javax.swing.JRadioButton dWord;
    private javax.swing.JButton decimal;
    private javax.swing.JButton divide;
    private javax.swing.JButton eButton;
    private javax.swing.JButton eight;
    private javax.swing.JButton equals;
    private javax.swing.JButton fButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JRadioButton hex;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jText;
    private javax.swing.JLabel jTotal;
    private javax.swing.JButton mC;
    private javax.swing.JButton mMinus;
    private javax.swing.JButton mPlus;
    private javax.swing.JButton mR;
    private javax.swing.JButton mS;
    private javax.swing.JButton minus;
    private javax.swing.JButton modButton;
    private javax.swing.JButton nine;
    private javax.swing.JLabel numset1;
    private javax.swing.JLabel numset10;
    private javax.swing.JLabel numset11;
    private javax.swing.JLabel numset12;
    private javax.swing.JLabel numset13;
    private javax.swing.JLabel numset14;
    private javax.swing.JLabel numset15;
    private javax.swing.JLabel numset16;
    private javax.swing.JLabel numset2;
    private javax.swing.JLabel numset3;
    private javax.swing.JLabel numset4;
    private javax.swing.JLabel numset5;
    private javax.swing.JLabel numset6;
    private javax.swing.JLabel numset7;
    private javax.swing.JLabel numset8;
    private javax.swing.JLabel numset9;
    private javax.swing.JButton one;
    private javax.swing.JButton oneDivX;
    private javax.swing.JButton percent;
    private javax.swing.JButton plus;
    private javax.swing.JButton plusMinus;
    private javax.swing.JRadioButton qWord;
    private javax.swing.JRadioButton rByte;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton sqrRoot;
    private javax.swing.JButton star;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JRadioButton word;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
